name: Issue Management
on:
  issues:
    types: [opened, labeled, unlabeled]
  issue_comment:
    types: [created]
  schedule:
    - cron: '0 * * * *'  # Run every hour

# Add this permissions block at the top level of your workflow
permissions:
  issues: write
  contents: read

jobs:
  auto_assign:
    runs-on: ubuntu-latest
    steps:
      - name: Auto-assign issue
        if: github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.name,
                issue_number: context.issue.number,
                assignees: ['ijashuzain']
              });
            } catch (error) {
              console.error('Error assigning issue:', error.message);
            }

  manage_waiting_for_response:
    runs-on: ubuntu-latest
    steps:
      - name: Check for response and manage label
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
              const { owner, repo } = context.repo;
              
              // Fetch all open issues
              const issues = await github.paginate(github.rest.issues.listForRepo, {
                owner,
                repo,
                state: 'open'
              });
              
              for (const issue of issues) {
                const issue_number = issue.number;
                const createdAt = new Date(issue.created_at);
                const now = new Date();
                const hoursSinceCreated = (now - createdAt) / (1000 * 60 * 60);
                
                // Check if the issue is older than 24 hours
                if (hoursSinceCreated >= 24) {
                  const comments = await github.rest.issues.listComments({
                    owner,
                    repo,
                    issue_number
                  });
                  
                  // If there are no comments (except from the issue creator), close the issue
                  if (comments.data.every(comment => comment.user.login === issue.user.login)) {
                    await github.rest.issues.update({
                      owner,
                      repo,
                      issue_number,
                      state: 'closed',
                      state_reason: 'not_planned'
                    });
                    
                    await github.rest.issues.createComment({
                      owner,
                      repo,
                      issue_number,
                      body: 'This issue has been automatically closed due to inactivity for 24 hours. If you still need assistance, please open a new issue or request to reopen this one.'
                    });
                    
                    console.log(`Closed issue #${issue_number} due to inactivity.`);
                  }
                }
              }
            }
